# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
#    parameter_name: value

services:
    AppBundle\Command\ManageGameEngineCommand:
        class: AppBundle\Command\ManageGameEngineCommand
        arguments:
            - "@app.game.daemon"
        tags:
            - { name: 'console.command' }

    AppBundle\Command\ManagePlayerConsumerCommand:
        class: AppBundle\Command\ManagePlayerConsumerCommand
        arguments:
            - "@app.consumer.daemon"
        tags:
            - { name: 'console.command' }

    davamigo.http.client:
        class: Davamigo\HttpClient\CurlHttpClient\CurlHttpClient

    app.maze.builder:
        class: AppBundle\Domain\Service\MazeBuilder\MazeBuilderRecursiveDivision

    app.maze.renderer.pacman:
        class: AppBundle\Domain\Service\MazeRender\MazePacmanRender

    app.maze.renderer.starship:
        class: AppBundle\Domain\Service\MazeRender\MazeStarshipRender

    app.maze.renderer.halloween:
        class: AppBundle\Domain\Service\MazeRender\MazeHalloweenRender

    app.maze.renderer:
        alias: app.maze.renderer.halloween

    app.game.engine:
        class: AppBundle\Domain\Service\GameEngine\GameEngine
        arguments:
            - "@app.game.move_players_async.service"
            - "@app.ghost.move.factory"
            - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Round')"
            - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Match')"
            - "@app.contest.score-calculator"
            - "@logger"
        public: true

    app.game.daemon:
        class: AppBundle\Service\GameEngine\GameDaemonManager
        public: true

    app.consumer.daemon:
        class: AppBundle\Service\GameEngine\ConsumerDaemonManager
        public: true

    app.game.move_players_sync.service:
        class: AppBundle\Domain\Service\MovePlayer\MoveAllPlayersSyncService
        arguments:
            - "@app.player.move_sync.service"

    app.game.move_players_async.service:
        class: AppBundle\Service\MovePlayer\MoveAllPlayersAsyncService
        arguments:
            - "@rabbitmq.connection"
            - "@app.player.request_data"
            - "@app.player.move.service"
            - "@app.consumer.daemon"
            - "@logger"
            - "%default_timeout%"

    app.player.validate.service:
        class: AppBundle\Domain\Service\MovePlayer\ValidatePlayerService
        arguments:
            - "@app.player.move.api"

    app.player.move.service:
        class: AppBundle\Domain\Service\MovePlayer\MovePlayerService

    app.player.move_sync.service:
        class: AppBundle\Domain\Service\MovePlayer\MovePlayerSyncDecoratorService
        arguments:
            - "@app.player.move.service"
            - "@app.player.request_data"
            - "@app.player.move.api"

    app.player.move.api:
        class: AppBundle\Service\MovePlayer\AskPlayerApiService
        arguments:
            - "@davamigo.http.client"
            - "@validator"
            - "@app.logger"
            - "@logger"
            - "%default_timeout%"

    app.player.move.consumer:
        class : AppBundle\Service\MovePlayer\MovePlayerAsyncConsumer
        arguments:
            - "@rabbitmq.connection"
            - "@app.player.move.api"
            - "@logger"

    app.player.request_data:
        class: AppBundle\Domain\Service\MovePlayer\PlayerRequest

    app.ghost.move.factory:
        class: AppBundle\Domain\Service\MoveGhost\MoveGhostFactory
        arguments:
            - 1: "@app.ghost.move.random"
              2: "@app.ghost.move.killing"

    app.ghost.move.random:
        class: AppBundle\Domain\Service\MoveGhost\MoveGhostRandom

    app.ghost.move.killing:
        class: AppBundle\Domain\Service\MoveGhost\MoveGhostKilling

    app.contest.register.validate_competitor:
        class: AppBundle\Domain\Service\Register\ValidateCompetitor
        arguments:
            - "@app.player.validate.service"

    app.contest.register.validate_competitor_ex:
        class: AppBundle\Service\Register\ValidateCompetitorEx
        arguments:
            - "@app.player.validate.service"
            - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Competitor')"
        public: true

    app.contest.register.generate_token:
        class: AppBundle\Domain\Service\Register\GenerateToken
        arguments:
            - "%secret%"
        public: true

    app.contest.round.manager:
        class: AppBundle\Service\Contest\RoundManager
        arguments:
            - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Competitor')"
            - "@=service('doctrine.orm.entity_manager').getRepository('AppBundle:Round')"
        public: true

    app.contest.match.manager:
        class: AppBundle\Service\Contest\MatchManager
        arguments:
            - "@app.maze.builder"
            - "@app.game.engine"
        public: true

    app.contest.score-calculator:
        class: AppBundle\Domain\Service\Contest\ScoreCalculator
        public: true

    app.logger:
        class: AppBundle\Service\LoggerService\LoggerService
        arguments:
            - "@doctrine.orm.entity_manager"
        public: true

    app.contest.mailer:
        class: AppBundle\Service\Mailer\MailerService
        arguments:
            - "@translator"
            - "@router"
            - "%default_email%"
        public: true

    rabbitmq.connection:
        class: PhpAmqpLib\Connection\AMQPStreamConnection
        arguments:
            - "%rabbitmq_host%"
            - "%rabbitmq_port%"
            - "%rabbitmq_user%"
            - "%rabbitmq_pass%"
            - "%rabbitmq_vhost%"
